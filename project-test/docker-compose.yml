version: '3.8'

services:
  # PostgreSQL Database with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: momentum-postgres
    environment:
      POSTGRES_DB: momentum_lens
      POSTGRES_USER: momentum_user
      POSTGRES_PASSWORD: momentum_pass_2024
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - momentum-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U momentum_user -d momentum_lens"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: momentum-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - momentum-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: momentum-backend
    environment:
      DATABASE_URL: postgresql://momentum_user:momentum_pass_2024@postgres:5432/momentum_lens
      REDIS_URL: redis://redis:6379
      PYTHONUNBUFFERED: 1
      LOG_LEVEL: INFO
    ports:
      - "8000:8000"
    volumes:
      - ./config:/app/config
      - ./backend:/app/backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - momentum-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: momentum-frontend
    environment:
      VITE_API_URL: http://localhost:8000
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - momentum-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: momentum-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - momentum-network

networks:
  momentum-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: